{"version":3,"sources":["mastro-elfo-mui/src/utils/storage.js","mastro-elfo-mui/src/styles/absolute.js","mastro-elfo-mui/src/components/AbsoluteCircularProgress.jsx","mastro-elfo-mui/src/components/AppContainer.jsx","mastro-elfo-mui/src/components/BackIconButton.jsx","mastro-elfo-mui/src/utils/useCountdown.js","mastro-elfo-mui/src/components/Condition.jsx","mastro-elfo-mui/src/components/Content.jsx","mastro-elfo-mui/src/styles/danger.js","mastro-elfo-mui/src/components/DangerButton.jsx","mastro-elfo-mui/src/components/Drawer.jsx","mastro-elfo-mui/src/components/DrawerIconButton.jsx","mastro-elfo-mui/src/components/DrawerLists.jsx","mastro-elfo-mui/src/components/ErrorWrapper.jsx","mastro-elfo-mui/src/components/GrowTypography.jsx","mastro-elfo-mui/src/styles/grow.js","mastro-elfo-mui/src/components/Header.jsx","mastro-elfo-mui/src/components/Loading.jsx","mastro-elfo-mui/src/components/NestedListTypography.jsx","mastro-elfo-mui/src/components/NotifyWrapper.jsx","mastro-elfo-mui/src/components/Page.jsx","mastro-elfo-mui/src/components/Print.jsx","mastro-elfo-mui/src/components/ResultList.jsx","mastro-elfo-mui/src/components/RouterWrapper.jsx","mastro-elfo-mui/src/components/SuspenseWrapper.jsx","mastro-elfo-mui/src/components/TableHeadCell.jsx","mastro-elfo-mui/src/components/ThemeWrapper.jsx","mastro-elfo-mui/src/components/TopFab.jsx","mastro-elfo-mui/src/components/Wrapper.jsx","assets/Logo.jsx","version.js","pages/about.jsx","pages/backup.jsx","pages/help.jsx","usePalette.js","pages/settings.jsx","pages/todolist.jsx","pages/dashboard.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Storage","prototype","getJson","key","defaultValue","JSON","parse","this","getItem","e","SyntaxError","setJson","value","setItem","stringify","Component","CircularProgress","styled","position","App","NotifyProps","RouterProps","SuspenseProps","ThemeProps","WrapperProps","ThemeWrapper","SuspenseWrapper","NotifyWrapper","Wrapper","RouterWrapper","props","goBack","useHistory","IconButton","onClick","color","Condition","alt","children","show","propTypes","PropTypes","node","any","Content","ContainerProps","BoxProps","Container","Box","pt","theme","palette","error","contrastText","backgroundColor","main","dark","danger","Button","Drawer","others","SwipeableDrawer","DrawerIconButton","IconButtonProps","DrawerProps","useState","open","setOpen","onOpen","onClose","DrawerLists","lists","map","avatar","header","items","leftFill","rightFill","List","subheader","ListSubheader","action","icon","primary","secondary","ListItem","button","Boolean","ListItemAvatar","ListItemIcon","ListItemText","ListItemSecondaryAction","ErrorWrapper","state","handleReloadClick","bind","info","console","window","location","reload","Header","RightActions","title","Typography","variant","gutterBottom","message","component","stack","split","line","i","grow","flexGrow","LeftAction","TitleProps","AppBar","Toolbar","GrowTypography","Loading","delay","innerLoading","setInnerLoading","useEffect","to","setTimeout","clearTimeout","NestedListTypography","ulProps","liProps","child","undefined","number","bool","notistackRef","createRef","handleDismiss","current","closeSnackbar","ref","maxSnack","anchorOrigin","vertical","horizontal","autoHideDuration","Page","content","print","topFab","NoPrint","TopFab","Print","useStyles","makeStyles","display","noPrint","classes","className","Router","MemoryRouter","routes","redirect","route","Fallback","logo","progress","useTheme","top","left","width","spacing","maxWidth","breakpoints","values","sm","style","transform","src","textAlign","LinearProgress","FallbackComponent","rest","fallback","withStyles","head","fontWeight","TableCell","THEME","createMuiTheme","Fab","bottom","right","zIndex","modal","threshold","trigger","useScrollTrigger","disableHysteresis","Zoom","in","scrollTo","behavior","Children","Child","LogoIcon","SvgIcon","fill","d","list","version","path","exact","BackIconButton","AppCard","item","VersionCard","drawer","Card","CardHeader","Avatar","CardContent","mt","enqueueSnackbar","useSnackbar","Promise","res","sessionStorage","length","localStorage","then","catch","err","PaletteContext","createContext","type","str2color","name","amber","blue","cyan","deepOrange","deepPurple","green","indigo","lightBlue","lightGreen","lime","orange","pink","purple","red","teal","yellow","useContext","setPrimary","setSecondary","setType","capitalize","ColorDialog","onPick","Dialog","DialogTitle","DialogContent","Grid","container","justify","xs","p","bgcolor","getContrastText","cursor","Item","checked","id","text","onDelete","onToggle","Checkbox","disableRipple","primaryTypographyProps","setText","setList","handleAdd","v1","focus","handleToggle","copy","slice","index","findIndex","handleDelete","splice","todo","filter","done","TextField","fullWidth","label","InputProps","endAdornment","InputAdornment","onChange","target","onKeyPress","push","todolist","backup","settings","about","help","setPalette","Provider","HashRouter","dashboard","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.4256387d.chunk.js","sourcesContent":["/**\n * Adds read/write json functions to LocalStorage and SessionStorage.\n *\n * Just require once.\n */\n\n/**\n * Gets a `key` from LocalStorage or SessionStorage and returns its value parsed as JSON.\n * @param  {string} key          Storage key\n * @param  {any} defaultValue   Default value if key is not found\n * @return {any}                Parsed JSON value\n */\nStorage.prototype.getJson = function(key, defaultValue) {\n  try {\n    return JSON.parse(this.getItem(key)) || defaultValue;\n  } catch (e) {\n    if (e instanceof SyntaxError) {\n      return defaultValue;\n    }\n    throw e;\n  }\n};\n\n/**\n * Stringify `value` and stores it in LocalStorage or SessionStorage\n * @param  {Number|String} key   The key\n * @param  {any} value Anything that can be converted to JSON string\n */\nStorage.prototype.setJson = function(key, value) {\n  this.setItem(key, JSON.stringify(value));\n};\n","import { styled } from \"@material-ui/core/styles\";\n\n/**\n * Applies `position: \"absolute\"` to `Component`\n * @param  {elementType} Component Input component\n * @return {elementType}           Absolute component\n */\nexport default Component =>\n  styled(Component)({\n    position: \"absolute\"\n  });\n","import CircularProgress from \"@material-ui/core/CircularProgress\";\nimport absolute from \"../styles/absolute\";\n\n/**\n * A `CircularProgress` styled with `absolute`.\n */\nexport default absolute(CircularProgress);\n","/**\n * Main container for an application.\n *\n * Wraps the application with Theme, Error handler, Notifier and Router.\n * Wrappers can be configured with ThemeProps, NotifyProps and RouterProps.\n */\n\nimport React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  ErrorWrapper,\n  NotifyWrapper,\n  RouterWrapper,\n  SuspenseWrapper,\n  ThemeWrapper,\n  Wrapper\n} from \"./\";\n\n/**\n * App main container.\n *\n * Wraps application with Theme, Error handler, Notifier and Router.\n * @param       {Object} [NotifyProps={}]   [description]\n * @param       {Object} [RouterProps={}]   [description]\n * @param       {Object} [SuspenseProps={}] [description]\n * @param       {Object} [ThemeProps={}]    [description]\n * @param       {Object} [WrapperProps={}}] [description]\n * @constructor\n */\n\nexport default function App({\n  NotifyProps = {},\n  RouterProps = {},\n  SuspenseProps = {},\n  ThemeProps = {},\n  WrapperProps = {}\n}) {\n  // TODO: can wrap everything in Wrapper:\n  /*\n  <Wrapper Children={[\n    { Child: ThemeWrapper, ...ThemeProps },\n    { Child: SuspenseWrapper, ...SuspenseProps },\n    { Child: ErrorWrapper },\n    { Child: NotifyWrapper, ...NotifyProps },\n    ...WrapperProps.Children\n  ]}>\n  <RouterWrapper {...RouterProps} />\n  </Wrapper>\n   */\n  return (\n    <ThemeWrapper {...ThemeProps}>\n      <SuspenseWrapper {...SuspenseProps}>\n        <ErrorWrapper>\n          <NotifyWrapper {...NotifyProps}>\n            <Wrapper {...WrapperProps}>\n              <RouterWrapper {...RouterProps} />\n            </Wrapper>\n          </NotifyWrapper>\n        </ErrorWrapper>\n      </SuspenseWrapper>\n    </ThemeWrapper>\n  );\n}\n\nApp.propTypes = {\n  NotifyProps: PropTypes.object,\n  RouterProps: PropTypes.object,\n  SuspenseProps: PropTypes.object,\n  ThemeProps: PropTypes.object,\n  WrapperProps: PropTypes.object\n};\n","import React from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport { IconButton } from \"@material-ui/core\";\nimport ArrowBackIcon from \"@material-ui/icons/ArrowBack\";\n\n/**\n * `IconButton` with `ArrowBack` icon.\n * Calls history's `goBack` when clicked.\n * @param  {Object} props Props are spread to `IconButton`\n * @return {node}\n */\n\nexport default function(props) {\n  const { goBack } = useHistory();\n  return (\n    <IconButton onClick={goBack} color=\"inherit\" {...props}>\n      <ArrowBackIcon />\n    </IconButton>\n  );\n}\n","import { useEffect, useState } from \"react\";\n\n/**\n * Creates a countdown timer from `start` to 0.\n *\n * Returns `value` and a function to reset the timer.\n *\n * @param  {Number} start        Starting point\n * @param  {Number} [delay=1000] Update delay\n * @return {Array}              `[value, reset]`\n */\n\nexport default function(start, delay = 1000) {\n  // Inner state\n  const [value, setValue] = useState(start);\n  // Start countdown\n  useEffect(() => {\n    // Until expired\n    if (value > 0) {\n      const to = setTimeout(setValue, delay, Math.max(0, value - delay / 1000));\n      return () => clearTimeout(to);\n    }\n  }, [delay, value]);\n\n  const reset = () => setValue(start);\n\n  return [value, reset];\n}\n","/**\n * Development\n *\n * Renders `children` if `show` is `true`.\n *\n * `alt` defaults to `null` and is rendered when `show` is `false`.\n * If `show` is a function, it is evaluated and its return value is used as condition.\n */\n\nimport PropTypes from \"prop-types\";\n\nexport default function Condition({ alt = null, children, show = false }) {\n  const condition = !!(typeof show === \"function\" ? show() : show);\n  return condition ? children : alt;\n}\n\nCondition.propTypes = {\n  alt: PropTypes.node,\n  children: PropTypes.node,\n  show: PropTypes.any\n};\n","import React from \"react\";\n\nimport { Box, Container } from \"@material-ui/core\";\n\n/**\n * Puts a `Box` inside a `Container`.\n * @param       {[type]} children            [description]\n * @param       {Object} [ContainerProps={}] [description]\n * @param       {Object} [BoxProps={}}]      [description]\n * @constructor\n */\n\nexport default function Content({\n  children,\n  ContainerProps = {},\n  BoxProps = {}\n}) {\n  return (\n    <Container {...ContainerProps}>\n      <Box pt={1} {...BoxProps}>\n        {children}\n      </Box>\n    </Container>\n  );\n}\n","import { styled } from \"@material-ui/core/styles\";\n\n/**\n * Use `error` palette to create a \"danger\" component\n * @param  {elementType} Component Input component\n * @return {elementType}           Danger component\n */\nexport default Component =>\n  styled(Component)(\n    ({\n      theme: {\n        palette: {\n          error: { contrastText, main, dark }\n        }\n      }\n    }) => ({\n      color: contrastText,\n      backgroundColor: main,\n      \"&:hover\": {\n        backgroundColor: dark\n      }\n    })\n  );\n","import { Button } from \"@material-ui/core\";\nimport danger from \"../styles/danger\";\n\n/**\n * A `Button` with `danger` style.\n */\nexport default danger(Button);\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { SwipeableDrawer } from \"@material-ui/core\";\n\n/**\n * [Drawer description]\n * @param       {[type]} children [description]\n * @param       {[type]} others   [description]\n * @constructor\n */\nexport default function Drawer({ children, ...others }) {\n  return <SwipeableDrawer {...others}>{children}</SwipeableDrawer>;\n}\n\nDrawer.propTypes = {\n  children: PropTypes.node\n};\n","import React, { Fragment, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { IconButton } from \"@material-ui/core\";\n\nimport MenuIcon from \"@material-ui/icons/Menu\";\n\nimport { Drawer } from \"./\";\n\n/**\n * [DrawerIconButton description]\n * @param       {[type]} children             [description]\n * @param       {Object} [IconButtonProps={}] [description]\n * @param       {Object} [DrawerProps={}}]    [description]\n * @constructor\n */\nexport default function DrawerIconButton({\n  children,\n  IconButtonProps = {},\n  DrawerProps = {}\n}) {\n  const [open, setOpen] = useState(false);\n\n  return (\n    <Fragment>\n      <IconButton\n        color=\"inherit\"\n        onClick={() => setOpen(true)}\n        {...IconButtonProps}\n      >\n        <MenuIcon />\n      </IconButton>\n      <Drawer\n        open={open}\n        onOpen={() => setOpen(true)}\n        onClose={() => setOpen(false)}\n        {...DrawerProps}\n      >\n        {children}\n      </Drawer>\n    </Fragment>\n  );\n}\n\nDrawerIconButton.propTypes = {\n  children: PropTypes.node,\n  IconButtonProps: PropTypes.object,\n  DrawerProps: PropTypes.object\n};\n","import React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport {\n  List,\n  ListItem,\n  ListItemAvatar,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  ListSubheader\n} from \"@material-ui/core\";\n\n/**\n * [DrawerLists description]\n * @param       {Array} [lists=[] }] [description]\n * @constructor\n */\nexport default function DrawerLists({ lists = [] }) {\n  return (\n    <Fragment>\n      {lists.map(\n        ({\n          avatar = false,\n          header = \"\",\n          items = [],\n          key,\n          leftFill = false,\n          rightFill = false\n        }) => (\n          <List key={key} subheader={<ListSubheader>{header}</ListSubheader>}>\n            {items.map(\n              ({\n                action = null,\n                icon = null,\n                key,\n                onClick = false,\n                primary = \"\",\n                secondary = \"\"\n              }) => (\n                <ListItem\n                  key={key}\n                  button={Boolean(onClick)}\n                  onClick={Boolean(onClick) ? onClick : () => {}}\n                >\n                  {(!!icon || leftFill) &&\n                    (avatar ? (\n                      <ListItemAvatar>{icon || <span />}</ListItemAvatar>\n                    ) : (\n                      <ListItemIcon>{icon || <span />}</ListItemIcon>\n                    ))}\n\n                  <ListItemText primary={primary} secondary={secondary} />\n\n                  {(!!action || rightFill) && (\n                    <ListItemSecondaryAction>\n                      {action || <span />}\n                    </ListItemSecondaryAction>\n                  )}\n                </ListItem>\n              )\n            )}\n          </List>\n        )\n      )}\n    </Fragment>\n  );\n}\n\nDrawerLists.propTypes = {\n  lists: PropTypes.arrayOf(\n    PropTypes.shape({\n      key: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n      avatar: PropTypes.bool,\n      header: PropTypes.string,\n      items: PropTypes.arrayOf(\n        PropTypes.shape({\n          key: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n            .isRequired,\n          action: PropTypes.node,\n          icon: PropTypes.node,\n          onClick: PropTypes.func,\n          primary: PropTypes.string,\n          secondary: PropTypes.string\n        })\n      ),\n      leftFill: PropTypes.bool,\n      rightFill: PropTypes.bool\n    })\n  )\n};\n","import React, { Component, Fragment } from \"react\";\n\nimport { IconButton, Typography } from \"@material-ui/core\";\n\nimport RefreshIcon from \"@material-ui/icons/Refresh\";\n\nimport { Content, Header } from \"./\";\n\n/**\n * Error handler component\n */\nexport default class ErrorWrapper extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n    this.handleReloadClick.bind(this);\n  }\n\n  componentDidCatch(error, info) {\n    console.error(\"Console Error\", error, info, this.props);\n  }\n\n  static getDerivedStateFromError(error) {\n    // Update state so the next render will show the fallback UI.\n    return { error };\n  }\n\n  handleReloadClick() {\n    window.location.reload();\n  }\n\n  render() {\n    const { error } = this.state;\n\n    if (error) {\n      return (\n        <Fragment>\n          <Header\n            RightActions={[\n              <IconButton\n                key=\"reload\"\n                color=\"inherit\"\n                title=\"Reload\"\n                onClick={this.handleReloadClick}\n              >\n                <RefreshIcon />\n              </IconButton>\n            ]}\n          >\n            An error occurred\n          </Header>\n          <Content>\n            <Typography variant=\"h3\" gutterBottom>\n              {error.message}\n            </Typography>\n            <Typography component=\"ul\">\n              {error.stack.split(\"\\n\").map((line, i) => (\n                <Typography key={i} component=\"li\" variant=\"body2\" gutterBottom>\n                  {line}\n                </Typography>\n              ))}\n            </Typography>\n          </Content>\n        </Fragment>\n      );\n    }\n    return this.props.children;\n  }\n}\n","import Typography from \"@material-ui/core/Typography\";\nimport grow from \"../styles/grow\";\n\n/**\n * Style a Typography with `flexGrow: 1`.\n */\nexport default grow(Typography);\n","import { styled } from \"@material-ui/core/styles\";\n\n/**\n * Applies `flexGrow: 1` to `Component`\n * @param  {elementType} Component Input component\n * @return {elementType}           Grown component\n */\nexport default Component => styled(Component)({ flexGrow: 1 });\n","/**\n * Create an AppBar/Toolbar header.\n *\n * Children are rendered inside a flexGrow Typography\n */\n\nimport React, { Fragment } from \"react\";\n\nimport { AppBar, Toolbar } from \"@material-ui/core\";\n\nimport GrowTypography from \"./GrowTypography\";\n\n/**\n * Create an AppBar/Toolbar header.\n *\n * Children are rendered inside a flexGrow Typography\n * @param       {[type]} children          [description]\n * @param       {[type]} [LeftAction=null] [description]\n * @param       {Array}  [RightActions=[]] [description]\n * @param       {Object} [TitleProps={}}]  [description]\n * @constructor\n */\nexport default function Header({\n  children,\n  LeftAction = null,\n  RightActions = [],\n  TitleProps = {}\n}) {\n  return (\n    <Fragment>\n      <AppBar>\n        <Toolbar>\n          {LeftAction}\n          <GrowTypography variant=\"h6\" color=\"inherit\" {...TitleProps}>\n            {children}\n          </GrowTypography>\n          {RightActions}\n        </Toolbar>\n      </AppBar>\n      <Toolbar />\n    </Fragment>\n  );\n}\n","import { useEffect, useState } from \"react\";\nimport PropTypes from \"prop-types\";\n\n/**\n * Renders `children` after `delay` milliseconds when `show` goes `true`.\n *\n * Example:\n * ```jsx\n *  <Button onClick={handler} disabled={loading}>\n *    Send\n *    <Loading show={loading}>\n *      <AbsoluteCircularProgress/>\n *    </Loading>\n *  </Button>\n * ```\n *\n * `handler` sets `loading` to `true` and sends a message to a server. If the operation takes more than `delay` an `AbsoluteCircularProgress` is displayed.\n * When operation is complete `handler` sets `loading` to `false` to hide the component.\n *\n * @param       {[type]}  children     [description]\n * @param       {Number}  [delay=1000] [description]\n * @param       {Boolean} [show=false] [description]\n * @param       {[type]}  others       [description]\n * @constructor\n */\n\nexport default function Loading({\n  children,\n  // Wait for `delay` milliseconds\n  delay = 1000,\n  // Display `children`\n  show = false,\n  ...others\n}) {\n  // Display CircularProgress if innerLoading is true\n  const [innerLoading, setInnerLoading] = useState(false);\n\n  useEffect(() => {\n    // Delay setting innerLoading\n    if (show) {\n      const to = setTimeout(setInnerLoading, delay, true);\n      return () => clearTimeout(to);\n    } else setInnerLoading(false);\n  }, [delay, show]);\n\n  return innerLoading ? children : null;\n}\n\nLoading.propTypes = {\n  delay: PropTypes.number,\n  show: PropTypes.bool\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { Typography } from \"@material-ui/core\";\n\n/**\n * Use Typography to create nested lists.\n *\n * Example\n *\n * ```jsx\n * <NestedListTypography>{[\"Item 1\", [\"Sublist Item 1\", \"Sublist Item 2\"], \"Item 2\"]}</NestedListTypography>\n *\n * * Item 1\n *  - Sublist item 1\n *  - Sublist Item 2\n * * Item 2\n * ```\n * @param       {Array} children   Array of strings or nested array\n * @param       {Object} [ulProps={ component: \"ul\" }] Properties for Typography component for lists\n * @param       {Object} [liProps={ component: \"li\" }] Properties for Typography component for list items\n * @constructor\n */\n\nexport default function NestedListTypography({\n  children,\n  ulProps = { component: \"ul\" },\n  liProps = { component: \"li\" }\n}) {\n  if (typeof children === \"object\") {\n    // Assumes array\n    return (\n      <Typography {...ulProps}>\n        {children.map((child, i) => (\n          <NestedListTypography key={i}>{child}</NestedListTypography>\n        ))}\n      </Typography>\n    );\n  } else if (children !== null && children !== undefined) {\n    return <Typography {...liProps}>{children}</Typography>;\n  }\n  return null;\n}\n\nNestedListTypography.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.string, PropTypes.array]),\n  liProps: PropTypes.object,\n  ulProps: PropTypes.object\n};\n","import React, { createRef } from \"react\";\n\nimport { SnackbarProvider } from \"notistack\";\n\nimport { IconButton } from \"@material-ui/core/\";\n\nimport CloseIcon from \"@material-ui/icons/Close\";\n\nconst notistackRef = createRef();\n\n/**\n * Wrapper for `notistack` snackbars.\n *\n * @see: https://iamhosseindhv.com/notistack\n * @param  {[type]} children [description]\n * @param  {[type]} props    [description]\n * @return {[type]}          [description]\n */\nexport default function({ children, ...props }) {\n  const handleDismiss = key => () => notistackRef.current.closeSnackbar(key);\n\n  return (\n    <SnackbarProvider\n      ref={notistackRef}\n      maxSnack={5}\n      anchorOrigin={{\n        vertical: \"top\",\n        horizontal: \"right\"\n      }}\n      autoHideDuration={5000}\n      action={key => (\n        <IconButton\n          color=\"inherit\"\n          title=\"Dismiss\"\n          onClick={handleDismiss(key)}\n        >\n          <CloseIcon />\n        </IconButton>\n      )}\n      {...props}\n    >\n      {children}\n    </SnackbarProvider>\n  );\n}\n","/**\n * Create a single page with header, content and a \"printable\" version (hidden on screen).\n *\n * By default scrolling the page make a `TopFab` appear.\n */\n\nimport React, { Fragment } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { NoPrint, Print, TopFab } from \"./\";\n\n/**\n * Create a single page with header, content and a \"printable\" version (hidden on screen).\n *\n * By default scrolling the page make a `TopFab` appear.\n *\n * @param       {[type]} [content=null] [description]\n * @param       {[type]} [header=null]  [description]\n * @param       {[type]} [print=null]   [description]\n * @param       {[type]} [topFab=true}] [description]\n * @constructor\n */\nexport default function Page({\n  content = null,\n  header = null,\n  print = null,\n  topFab = true\n}) {\n  return (\n    <Fragment>\n      <NoPrint>\n        {topFab && <TopFab />}\n        {!!header && header}\n        {!!content && content}\n      </NoPrint>\n      <Print>{!!print && print}</Print>\n    </Fragment>\n  );\n}\n\nPage.propTypes = {\n  topFab: PropTypes.bool,\n  content: PropTypes.element,\n  header: PropTypes.element,\n  print: PropTypes.element\n};\n","/**\n * Provides two components to control what is shown on screen and printed.\n */\n\nimport React from \"react\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  print: {\n    \"@media screen\": {\n      display: \"none\"\n    }\n  },\n  noPrint: {\n    \"@media print\": {\n      display: \"none\"\n    }\n  }\n});\n\n/**\n * Children inside `Print` are not shown on screen.\n */\nexport function Print({ children }) {\n  const classes = useStyles();\n  return <div className={classes.print}>{children}</div>;\n}\n\n/**\n * Children inside `NoPrint` are not printed.\n */\nexport function NoPrint({ children }) {\n  const classes = useStyles();\n  return <div className={classes.noPrint}>{children}</div>;\n}\n","import React from \"react\";\n\nimport {\n  List,\n  ListItem,\n  ListItemIcon,\n  ListItemText,\n  ListSubheader\n} from \"@material-ui/core\";\n\nimport { Condition } from \"./\";\n\n/**\n * Organizes a List with optional SubHeader\n *\n * If `results` is `null` or `undefined`, then prints nothing.\n *\n * Otherwise `results` must be an array, for each item `mapper` is called and must provide at least a unique `key`.\n *\n * Also `LeftIcon` and `RightIcon` are used inside a `ListItemIcon`, and `primary` and `secondary` are used with `ListItemText`.\n *\n * Anything else is passed to `ListItem`. By default `onClick` sets `button` to `true`.\n * @param  {[type]} subheader [description]\n * @param  {[type]} [mapper=r => r] [description]\n * @param  {[type]} results   [description]\n * @param  {[type]} others    [description]\n * @return {[type]}           [description]\n */\nexport default function({ subheader, mapper = r => r, results, ...others }) {\n  return (\n    <Condition show={results !== null && results !== undefined}>\n      <List\n        subheader={!!subheader && <ListSubheader>{subheader}</ListSubheader>}\n        {...others}\n      >\n        {results &&\n          results.map(r => {\n            const {\n              LeftIcon,\n              RightIcon,\n              primary,\n              secondary,\n              onClick,\n              ...others\n            } = mapper(r);\n            return (\n              <ListItem button={!!onClick} onClick={onClick} {...others}>\n                {!!LeftIcon && <ListItemIcon>{LeftIcon}</ListItemIcon>}\n\n                <ListItemText primary={primary} secondary={secondary} />\n\n                {!!RightIcon && <ListItemIcon>{RightIcon}</ListItemIcon>}\n              </ListItem>\n            );\n          })}\n      </List>\n    </Condition>\n  );\n}\n","import React from \"react\";\n\nimport {\n  // See https://reacttraining.com/react-router/web/guides/quick-start for details\n  MemoryRouter,\n  Route,\n  Switch,\n  Redirect\n} from \"react-router-dom\";\n\nimport { Wrapper } from \"./\";\n\n/**\n * Router wrapper that use \"react-router-dom\" to create routes.\n *\n * By default uses `MemoryRouter`; this can be changed with `Router` param. `Routes` and optional `Redirect` are inside a `Switch`.\n *\n * `routes` is an array of `Route` params; No need to specify a unique `key`. It defaults to `[]`\n *\n * If `redirect` is specified, this is passed to the `to` param of a `Redirect` component.\n *\n * Anything else is passed to `Router`.\n *\n * @see: https://reacttraining.com/react-router/web/guides/quick-start\n * @param  {[type]} [Router=MemoryRouter] [description]\n * @param  {Array}  [routes=[]]           [description]\n * @param  {[type]} [redirect=null]       [description]\n * @param  {Object} [WrapperProps={}]     [description]\n * @param  {[type]} others                [description]\n * @return {[type]}                       [description]\n */\n\nexport default function({\n  Router = MemoryRouter,\n  routes = [],\n  redirect = null,\n  WrapperProps = {},\n  ...others\n}) {\n  return (\n    <Router {...others}>\n      <Wrapper {...WrapperProps}>\n        <Switch>\n          {routes.map((route, i) => (\n            <Route key={i} {...route} />\n          ))}\n          {!!redirect && <Redirect to={redirect} />}\n        </Switch>\n      </Wrapper>\n    </Router>\n  );\n}\n","import React, { Suspense } from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { useTheme } from \"@material-ui/core/\";\nimport { Box, LinearProgress } from \"@material-ui/core\";\n\n/**\n * [Fallback description]\n * @param       {[type]}  logo             [description]\n * @param       {Boolean} [progress=false] [description]\n * @param       {String}  [title=\"\"        }]            [description]\n * @constructor\n */\nexport function Fallback({ logo, progress = false, title = \"\" }) {\n  const theme = useTheme();\n\n  return (\n    <Box\n      position=\"fixed\"\n      top=\"50%\"\n      left=\"50%\"\n      width={`calc(100% - ${theme.spacing(8)}px)`}\n      maxWidth={theme.breakpoints.values.sm / 2}\n      style={{\n        transform: \"translate(-50%, -50%)\"\n      }}\n    >\n      {!!logo && (\n        <Box>\n          <img src={logo} alt=\"Logo\" width=\"100%\" />\n        </Box>\n      )}\n\n      {!!title && <Box textAlign=\"center\">{title}</Box>}\n\n      {progress !== false && (\n        <Box>\n          {progress === true ? (\n            <LinearProgress />\n          ) : (\n            <LinearProgress variant={\"determinate\"} value={progress} />\n          )}\n        </Box>\n      )}\n    </Box>\n  );\n}\n\nFallback.propTypes = {\n  logo: PropTypes.string,\n  progress: PropTypes.oneOfType([PropTypes.bool, PropTypes.number]),\n  title: PropTypes.string\n};\n\n/**\n * [SuspenseWrapper description]\n * @param       {[type]} children [description]\n * @param       {[type]} Fallback [description]\n * @param       {[type]} rest     [description]\n * @constructor\n */\nexport default function SuspenseWrapper({\n  children,\n  Fallback: FallbackComponent = Fallback,\n  ...rest\n}) {\n  return (\n    <Suspense fallback={<FallbackComponent {...rest} />}>{children}</Suspense>\n  );\n}\n\nSuspenseWrapper.propTypes = {\n  children: PropTypes.node,\n  Fallback: PropTypes.node\n};\n","/**\n *\n */\n\nimport { withStyles } from \"@material-ui/core/styles\";\nimport TableCell from \"@material-ui/core/TableCell\";\n\n/**\n * A `TableCell` with theme primary color as background and corresponding contrast color as text color.\n * @type {[type]}\n */\nexport default withStyles(theme => {\n  return {\n    // Apply head style based on theme\n    head: {\n      backgroundColor: `${theme.palette.primary.main} !important`,\n      color: `${theme.palette.primary.contrastText} !important`,\n      textAlign: \"center\",\n      fontWeight: \"bold\",\n      \"-webkit-print-color-adjust\": \"exact\"\n    }\n  };\n})(TableCell);\n","import React from \"react\";\n\n// Customize main theme\nimport { MuiThemeProvider, createMuiTheme } from \"@material-ui/core/styles\";\n\n/**\n * Theme wrapper\n * @param       {[type]} children [description]\n * @param       {[type]} props    [description]\n * @constructor\n */\nexport default function ThemeWrapper({ children, ...props }) {\n  // See https://material-ui.com/customization/theming/#createmuitheme-options-args-theme for details\n  const THEME = createMuiTheme(props);\n  return <MuiThemeProvider theme={THEME}>{children}</MuiThemeProvider>;\n}\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Fab, useScrollTrigger, Zoom } from \"@material-ui/core\";\n\nimport KeyboardArrowUpIcon from \"@material-ui/icons/KeyboardArrowUp\";\n\nconst useStyles = makeStyles(theme => ({\n  Fab: {\n    position: \"fixed\",\n    bottom: theme.spacing(1),\n    right: theme.spacing(1),\n    zIndex: theme.zIndex.modal\n  }\n}));\n\n/**\n * A `Fab` that zooms in when the page is scolled and scrolls to top when clicked.\n * @param       {Number} [threshold=100] [description]\n * @param       {[type]} others          [description]\n * @constructor\n */\nexport default function TopFab({ threshold = 100, ...others }) {\n  const classes = useStyles();\n  const trigger = useScrollTrigger({ disableHysteresis: true, threshold });\n\n  const handleClick = () => {\n    window.scrollTo({ top: 0, left: 0, behavior: \"smooth\" });\n  };\n\n  return (\n    <Zoom in={trigger}>\n      <Fab onClick={handleClick} className={classes.Fab} {...others}>\n        <KeyboardArrowUpIcon />\n      </Fab>\n    </Zoom>\n  );\n}\n\nTopFab.propTypes = {\n  // Minimum scroll before show the button\n  threshold: PropTypes.number\n};\n","import React from \"react\";\nimport PropTypes from \"prop-types\";\n\n/**\n * Wraps a component dinamically\n *\n * `Children` defaults to `[]`, is an array of object. Each object must have a `Component` property that will wrap the following items in the list. Any other property in each item is passed to its `Component`.\n *\n * If `Component` has `children`, it must render also its `children` property.\n * @param       {[type]} children     [description]\n * @param       {Array}  [Children=[] }]            [description]\n * @constructor\n */\nexport default function Wrapper({ children, Children = [] }) {\n  // Take the first child\n  const [Child, ...rest] = Children;\n  if (Child) {\n    // Split Child between Component and all the rest\n    const { Component, ...props } = Child;\n    // Render Component and Wrap the rest\n    return (\n      <Component {...props}>\n        <Wrapper Children={rest}>{children}</Wrapper>\n      </Component>\n    );\n  } else {\n    // No child left, just render children\n    return children;\n  }\n}\n\nWrapper.propTypes = {\n  children: PropTypes.node,\n  Children: PropTypes.arrayOf(\n    PropTypes.objectOf((propValue, key) => {\n      if (\n        !Object.keys(propValue).includes(\"Component\")\n        // TODO: Check if propValue.Component is something that can be rendered\n      ) {\n        return new Error(\"Component property is required\");\n      }\n    })\n  )\n};\n","import React from \"react\";\n\nimport { SvgIcon } from \"@material-ui/core\";\n\nexport default function LogoIcon(props) {\n  return (\n    <SvgIcon {...props}>\n      <path\n        style={{ fill: \"#009688\" }}\n        d=\"m 15.596816,7.999158 c 0,0 -1.591511,-1.0822199 -4.328912,2.164464 C 8.5305045,13.410305 8.3156495,12.757781 7.5517238,12.948761 6.7877981,13.998977 -4.5e-7,16.827701 -4.5e-7,16.720649 4.9099876,15.505817 7.5573668,15.286553 9.4854115,15.383777 c 0,0 -1.7188335,0.827592 -1.9098149,2.546424 -0.1909815,1.718831 -0.7639257,2.992043 1.2732099,3.628643 1.4068245,0.134232 2.5556595,0.0828 3.5172395,0.572988 -1.656512,-2.164128 -4.5763645,-1.630476 -3.0716165,-4.392575 0.700265,-1.336872 2.2281165,-2.164452 2.7373995,-2.291784 0.509284,-0.12732 2.61008,0.19098 2.61008,0.19098 0,0 -0.747177,0.77604 -1.46419,2.419103 -0.599564,1.373904 -0.488016,2.313048 0.381962,2.673732 0.458363,-0.09624 3.998383,0.369432 4.424404,0.87534 -0.629421,-1.61028 -3.897281,-1.830876 -3.724138,-3.230772 0,0 1.336869,-1.209551 1.846153,-2.164463 0.509284,-0.9549 0.190982,-2.992032 0.190982,-2.992032 0.483239,-0.066 0.720483,-0.255144 0.954907,-0.44562 l 0.650353,0.710525 c 0.371522,0.1746 0.618039,0.09924 0.913419,0.121512 -0.296397,-0.135348 -0.597169,-0.270708 -0.769734,-0.406056 -0.323758,-0.350328 -0.151979,-0.186845 -0.475736,-0.744293 0.179522,-0.38664 0.30581,-0.400608 0.445624,-0.509279 0.229614,-0.206772 0.360376,0.278423 0.509284,0.636599 0.646579,0.126048 1.018568,-0.297084 1.527852,-0.44562 l -0.970823,0.04764 c -0.788924,-0.09312 -0.541297,-1.050239 -0.811672,-1.575587 0,0 0.286473,-0.8275797 0.541114,-1.1458923 0.254642,-0.3182999 0.986738,-0.7002599 0.986738,-0.7002599 0,0 2.482759,0.50928 3.055704,0.38196 0.572944,-0.12732 1.018567,-0.25464 1.082228,-0.7002599 C 24,7.999098 24,7.4898181 24,7.4898181 c 0,0 -1.973474,0 -2.291777,-0.381972 -0.9776,-0.184164 -1.317987,-0.9860278 -1.209544,-1.0185598 -0.178039,-1.2473638 1.362865,-2.0980677 2.164455,-3.1193635 0,0 -1.209548,-1.2732237 -1.909814,-1.0822318 -0.700265,0.19098 -1.591512,1.6551717 -2.164456,1.9098117 -0.572944,0.2546399 -1.209549,-0.127308 -1.33687,0.3819599 -0.127321,0.5092919 -0.572944,0.9549118 -0.636606,1.2732118 -0.06366,0.3182999 0.190983,1.2732118 0.190983,1.2732118 -0.477887,0.3322919 -0.815422,0.7945198 -1.20955,1.2732238 z\"\n      />\n    </SvgIcon>\n  );\n}\n","export const version = \"1.0.0\";\n","import React from \"react\";\n\nimport {\n  Avatar,\n  Box,\n  Card,\n  CardContent,\n  CardHeader,\n  Typography\n} from \"@material-ui/core\";\n\nimport {\n  BackIconButton,\n  Content,\n  Header,\n  NestedListTypography,\n  Page\n} from \"../mastro-elfo-mui/\";\n\nimport LogoIcon from \"../assets/Logo\";\nimport { version } from \"../version\";\n\nconst list = [\n  {\n    version: \"1.0.0\",\n    subheader: \"Currently in development\",\n    list: []\n  }\n];\n\nfunction Component() {\n  return (\n    <Page\n      header={<Header LeftAction={<BackIconButton />}>About Demosaur</Header>}\n      content={\n        <Content>\n          <AppCard />\n          {list.map((item, i) => (\n            <VersionCard key={i} {...item} />\n          ))}\n        </Content>\n      }\n    />\n  );\n}\n\nexport const route = {\n  path: \"/about\",\n  exact: true,\n  component: Component\n};\n\nexport const drawer = {\n  key: \"about\",\n  primary: \"Demosaur\",\n  secondary: `v${version}`,\n  title: \"About Demosaur\",\n  icon: <LogoIcon />\n};\n\nfunction AppCard() {\n  return (\n    <Card>\n      <CardHeader\n        avatar={\n          <Avatar>\n            <LogoIcon />\n          </Avatar>\n        }\n        title=\"Demosaur\"\n        subheader={`v${version}`}\n      />\n      <CardContent>\n        <Typography variant=\"subtitle1\" color=\"textSecondary\" gutterBottom>\n          Demo app\n        </Typography>\n\n        <Typography variant=\"h6\" gutterBottom>\n          MIT license\n        </Typography>\n\n        <Typography variant=\"h6\">Software development</Typography>\n        <Typography variant=\"subtitle1\" color=\"textSecondary\" gutterBottom>\n          Francesco Michienzi\n        </Typography>\n      </CardContent>\n    </Card>\n  );\n}\n\nfunction VersionCard({ version, subheader = \"\", list = [] }) {\n  return (\n    <Box mt={2}>\n      <Card>\n        <CardHeader title={`Version ${version}`} subheader={subheader} />\n        <CardContent>\n          <NestedListTypography>{list}</NestedListTypography>\n        </CardContent>\n      </Card>\n    </Box>\n  );\n}\n","import React from \"react\";\n\nimport { useSnackbar } from \"notistack\";\n\nimport { List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\n\nimport { BackIconButton, Content, Header, Page } from \"../mastro-elfo-mui/\";\n\nimport BackupIcon from \"@material-ui/icons/Backup\";\nimport SaveBackupIcon from \"@material-ui/icons/CloudDownload\";\nimport RestoreBackupIcon from \"@material-ui/icons/Restore\";\n\nfunction Component() {\n  const { enqueueSnackbar } = useSnackbar();\n\n  const handleSave = () => {\n    new Promise(res => {\n      for (let i = 0; i < sessionStorage.length; i++) {\n        const key = sessionStorage.key(i);\n        localStorage.setItem(key, sessionStorage.getItem(key));\n      }\n      res();\n    })\n      .then(() => {\n        enqueueSnackbar(\"Backup saved to Local Storage\", {\n          variant: \"success\"\n        });\n      })\n      .catch(err => {\n        enqueueSnackbar(err.message, { variant: \"error\" });\n      });\n  };\n\n  const handleRestore = () => {\n    new Promise(res => {\n      for (let i = 0; i < localStorage.length; i++) {\n        const key = localStorage.key(i);\n        sessionStorage.setItem(key, localStorage.getItem(key));\n      }\n      res();\n    })\n      .then(() => {\n        enqueueSnackbar(\"Backup restored from Local Storage\", {\n          variant: \"success\"\n        });\n      })\n      .catch(err => {\n        enqueueSnackbar(err.message, { variant: \"error\" });\n      });\n  };\n\n  return (\n    <Page\n      header={<Header LeftAction={<BackIconButton />}>Backup</Header>}\n      content={\n        <Content>\n          <List>\n            <ListItem button onClick={handleSave}>\n              <ListItemIcon>\n                <SaveBackupIcon />\n              </ListItemIcon>\n              <ListItemText\n                primary=\"Save backup\"\n                secondary=\"Save data to Local Storage\"\n              />\n            </ListItem>\n\n            <ListItem button onClick={handleRestore}>\n              <ListItemIcon>\n                <RestoreBackupIcon />\n              </ListItemIcon>\n              <ListItemText\n                primary=\"Restore backup\"\n                secondary=\"Restore data from Local Storage\"\n              />\n            </ListItem>\n          </List>\n        </Content>\n      }\n    />\n  );\n}\n\nexport const route = {\n  path: \"/backup\",\n  exact: true,\n  component: Component\n};\n\nexport const drawer = {\n  key: \"backup\",\n  primary: \"Backup\",\n  secondary: \"\",\n  icon: <BackupIcon />,\n  title: \"Manage backups\"\n};\n","import React from \"react\";\nimport { BackIconButton, Content, Header, Page } from \"../mastro-elfo-mui/\";\nimport HelpIcon from \"@material-ui/icons/Help\";\n\nfunction Component() {\n  return (\n    <Page\n      header={<Header LeftAction={<BackIconButton />}>Help</Header>}\n      content={<Content>help</Content>}\n    />\n  );\n}\n\nexport const route = {\n  path: \"/help\",\n  exact: true,\n  component: Component\n};\n\nexport const drawer = {\n  key: \"help\",\n  primary: \"Help\",\n  secondary: \"\",\n  icon: <HelpIcon />,\n  title: \"How to\"\n};\n","import { createContext, useContext } from \"react\";\n\nimport amber from \"@material-ui/core/colors/amber\";\nimport blue from \"@material-ui/core/colors/blue\";\nimport cyan from \"@material-ui/core/colors/cyan\";\nimport deepOrange from \"@material-ui/core/colors/deepOrange\";\nimport deepPurple from \"@material-ui/core/colors/deepPurple\";\nimport green from \"@material-ui/core/colors/green\";\nimport indigo from \"@material-ui/core/colors/indigo\";\nimport lightBlue from \"@material-ui/core/colors/lightBlue\";\nimport lightGreen from \"@material-ui/core/colors/lightGreen\";\nimport lime from \"@material-ui/core/colors/lime\";\nimport orange from \"@material-ui/core/colors/orange\";\nimport pink from \"@material-ui/core/colors/pink\";\nimport purple from \"@material-ui/core/colors/purple\";\nimport red from \"@material-ui/core/colors/red\";\nimport teal from \"@material-ui/core/colors/teal\";\nimport yellow from \"@material-ui/core/colors/yellow\";\n\nexport const PaletteContext = createContext({\n  primary: \"teal\",\n  secondary: \"teal\",\n  type: \"light\"\n});\n\nexport function usePalette() {\n  return useContext(PaletteContext);\n}\n\nexport function str2color(name) {\n  return {\n    amber,\n    blue,\n    cyan,\n    deepOrange,\n    deepPurple,\n    green,\n    indigo,\n    lightBlue,\n    lightGreen,\n    lime,\n    orange,\n    pink,\n    purple,\n    red,\n    teal,\n    yellow\n  }[name];\n}\n","import React, { useState } from \"react\";\n\nimport { capitalize } from \"lodash\";\n\nimport { useTheme } from \"@material-ui/core/styles\";\nimport { List, ListItem, ListItemIcon, ListItemText } from \"@material-ui/core\";\nimport {\n  Box,\n  Dialog,\n  DialogTitle,\n  DialogContent,\n  Grid\n} from \"@material-ui/core\";\n\nimport { BackIconButton, Content, Header, Page } from \"../mastro-elfo-mui/\";\n\nimport InvertColorsIcon from \"@material-ui/icons/InvertColors\";\nimport PaletteIcon from \"@material-ui/icons/Palette\";\nimport SettingsIcon from \"@material-ui/icons/Settings\";\n\nimport { usePalette, str2color } from \"../usePalette\";\n\nfunction Component() {\n  const [\n    { primary, secondary, type },\n    setPrimary,\n    setSecondary,\n    setType\n  ] = usePalette();\n  const [open, setOpen] = useState(false);\n\n  const handleToggleTheme = () => setType(type === \"light\" ? \"dark\" : \"light\");\n  const handlePickPrimary = () => setOpen(\"primary\");\n  const handlePickSecondary = () => setOpen(\"secondary\");\n  const handlePick = color => {\n    if (open === \"primary\") setPrimary(color);\n    else setSecondary(color);\n    setOpen(false);\n  };\n\n  return (\n    <Page\n      header={<Header LeftAction={<BackIconButton />}>Settings</Header>}\n      content={\n        <Content>\n          <List>\n            <ListItem button onClick={handlePickPrimary}>\n              <ListItemIcon>\n                <PaletteIcon />\n              </ListItemIcon>\n              <ListItemText\n                primary={capitalize(primary)}\n                secondary=\"Primary color\"\n              />\n            </ListItem>\n\n            <ListItem button onClick={handlePickSecondary}>\n              <ListItemIcon>\n                <PaletteIcon />\n              </ListItemIcon>\n              <ListItemText\n                primary={capitalize(secondary)}\n                secondary=\"Secondary color\"\n              />\n            </ListItem>\n\n            <ListItem button onClick={handleToggleTheme}>\n              <ListItemIcon>\n                <InvertColorsIcon />\n              </ListItemIcon>\n              <ListItemText primary={capitalize(type)} secondary=\"Theme\" />\n            </ListItem>\n          </List>\n\n          <ColorDialog\n            open={!!open}\n            type={open}\n            onPick={handlePick}\n            onClose={() => {\n              setOpen(false);\n            }}\n          />\n        </Content>\n      }\n    />\n  );\n}\n\nexport const route = {\n  path: \"/settings\",\n  exact: true,\n  component: Component\n};\n\nexport const drawer = {\n  key: \"settings\",\n  primary: \"Settings\",\n  secondary: \"\",\n  icon: <SettingsIcon />,\n  title: \"App settings\"\n};\n\nfunction ColorDialog({ onPick, open, ...rest }) {\n  const theme = useTheme();\n\n  return (\n    <Dialog open={open} {...rest}>\n      <DialogTitle>Pick a color</DialogTitle>\n      <DialogContent>\n        <Grid container justify=\"space-between\">\n          {[\n            \"amber\",\n            \"blue\",\n            \"cyan\",\n            \"deepOrange\",\n            \"deepPurple\",\n            \"green\",\n            \"indigo\",\n            \"lightBlue\",\n            \"lightGreen\",\n            \"lime\",\n            \"orange\",\n            \"pink\",\n            \"purple\",\n            \"red\",\n            \"teal\",\n            \"yellow\"\n          ].map((color, i) => (\n            <Grid key={i} item xs={3}>\n              <Box\n                p={2}\n                bgcolor={str2color(color)}\n                color={theme.palette.getContrastText(\n                  str2color(color)[open === \"primary\" ? 500 : \"A400\"]\n                )}\n                onClick={() => onPick(color)}\n                style={{ cursor: \"pointer\" }}\n              >\n                {color}\n              </Box>\n            </Grid>\n          ))}\n        </Grid>\n      </DialogContent>\n    </Dialog>\n  );\n}\n","import React, { createRef, useEffect, useState } from \"react\";\nimport { BackIconButton, Content, Header, Page } from \"../mastro-elfo-mui/\";\nimport ListIcon from \"@material-ui/icons/List\";\n\nimport { v1 } from \"uuid\";\nimport { useSnackbar } from \"notistack\";\n\nimport {\n  Checkbox,\n  IconButton,\n  InputAdornment,\n  List,\n  ListItem,\n  // ListItemAvatar,\n  ListItemIcon,\n  ListItemSecondaryAction,\n  ListItemText,\n  ListSubheader,\n  TextField\n} from \"@material-ui/core\";\n\nimport AddCircleIcon from \"@material-ui/icons/AddCircle\";\nimport DeleteForeverIcon from \"@material-ui/icons/DeleteForever\";\n\nconst ref = createRef();\n\nfunction Component() {\n  const [text, setText] = useState(\"\");\n  const [list, setList] = useState([]);\n  const { enqueueSnackbar } = useSnackbar();\n\n  useEffect(() => {\n    // read all from sessionStorage\n    setList(sessionStorage.getJson(\"todolist\", []));\n  }, []);\n\n  useEffect(() => {\n    sessionStorage.setJson(\"todolist\", list);\n  }, [list]);\n\n  const handleAdd = () => {\n    setList([{ id: v1(), checked: false, text }, ...list]);\n    setText(\"\");\n    ref.current.focus();\n  };\n\n  const handleToggle = id => {\n    const copy = list.slice();\n    const index = copy.findIndex(item => item.id === id);\n    if (index !== -1) {\n      copy[index].checked = !copy[index].checked;\n      setList(copy);\n    } else {\n      enqueueSnackbar(\"Item not found\", { variant: \"error\" });\n    }\n  };\n\n  const handleDelete = id => {\n    const copy = list.slice();\n    const index = copy.findIndex(item => item.id === id);\n    if (index !== -1) {\n      copy.splice(index, 1);\n      setList(copy);\n    } else {\n      enqueueSnackbar(\"Item not found\", { variant: \"error\" });\n    }\n  };\n\n  const todo = list.filter(({ checked }) => !checked);\n  const done = list.filter(({ checked }) => checked);\n\n  return (\n    <Page\n      header={<Header LeftAction={<BackIconButton />}>ToDo List</Header>}\n      content={\n        <Content>\n          <TextField\n            fullWidth\n            label=\"Add item\"\n            InputProps={{\n              endAdornment: (\n                <InputAdornment position=\"end\">\n                  <IconButton onClick={handleAdd}>\n                    <AddCircleIcon />\n                  </IconButton>\n                </InputAdornment>\n              )\n            }}\n            value={text}\n            onChange={({ target: { value } }) => setText(value)}\n            onKeyPress={({ key }) => (key === \"Enter\" ? handleAdd() : null)}\n            ref={ref}\n          />\n\n          <List\n            subheader={<ListSubheader>To Do ({todo.length})</ListSubheader>}\n          >\n            {todo.map(item => (\n              <Item\n                key={item.id}\n                {...item}\n                onToggle={handleToggle}\n                onDelete={handleDelete}\n              />\n            ))}\n          </List>\n          <List subheader={<ListSubheader>Done ({done.length})</ListSubheader>}>\n            {done.map(item => (\n              <Item\n                key={item.id}\n                {...item}\n                onToggle={handleToggle}\n                onDelete={handleDelete}\n              />\n            ))}\n          </List>\n        </Content>\n      }\n    />\n  );\n}\n\nfunction Item({ checked, id, text, onDelete, onToggle }) {\n  return (\n    <ListItem button onClick={() => onToggle(id)}>\n      <ListItemIcon>\n        <Checkbox disableRipple checked={checked} />\n      </ListItemIcon>\n      <ListItemText\n        primary={text}\n        primaryTypographyProps={{\n          color: checked ? \"textSecondary\" : \"initial\"\n        }}\n      />\n      <ListItemSecondaryAction>\n        <IconButton onClick={() => onDelete(id)}>\n          <DeleteForeverIcon />\n        </IconButton>\n      </ListItemSecondaryAction>\n    </ListItem>\n  );\n}\n\nexport const route = {\n  path: \"/todolist\",\n  exact: true,\n  component: Component\n};\n\nexport const drawer = {\n  key: \"todolist\",\n  primary: \"ToDo List\",\n  secondary: \"\",\n  icon: <ListIcon />,\n  title: \"Open ToDo List app\"\n};\n","import React from \"react\";\n\nimport { useHistory } from \"react-router-dom\";\n\nimport {\n  Content,\n  DrawerIconButton,\n  DrawerLists,\n  Header,\n  Page\n} from \"../mastro-elfo-mui/\";\n\n// import BrokenImageIcon from \"@material-ui/icons/BrokenImage\";\nimport GitHubIcon from \"@material-ui/icons/GitHub\";\n\nimport { drawer as about } from \"./about\";\nimport { drawer as backup } from \"./backup\";\nimport { drawer as help } from \"./help\";\nimport { drawer as settings } from \"./settings\";\nimport { drawer as todolist } from \"./todolist\";\n\nfunction Component() {\n  const { push } = useHistory();\n\n  return (\n    <Page\n      header={\n        <Header\n          LeftAction={\n            <DrawerIconButton>\n              <DrawerLists\n                lists={[\n                  {\n                    key: \"pages\",\n                    header: \"Pages\",\n                    leftFill: true,\n                    items: [{ onClick: () => push(\"/todolist\"), ...todolist }]\n                  },\n                  {\n                    key: \"actions\",\n                    header: \"Actions\",\n                    leftFill: true,\n                    items: [\n                      { onClick: () => push(\"/backup\"), ...backup },\n                      { onClick: () => push(\"/settings\"), ...settings }\n                    ]\n                  },\n                  {\n                    key: \"application\",\n                    header: \"Application\",\n                    leftFill: true,\n                    items: [\n                      {\n                        onClick: () => push(\"/about\"),\n                        ...about\n                      },\n                      { onClick: () => push(\"/help\"), ...help },\n                      {\n                        key: \"github\",\n                        primary: \"@mastro-elfo/demosaur\",\n                        secondary: \"Github\",\n                        icon: <GitHubIcon />,\n                        onClick: () =>\n                          window.open(\"https://github.com/mastro-elfo/demosaur\")\n                      }\n                    ]\n                  }\n                ]}\n              />\n            </DrawerIconButton>\n          }\n        >\n          Dashboard\n        </Header>\n      }\n      content={<Content>Hello!</Content>}\n    />\n  );\n}\n\nexport const route = {\n  path: \"/\",\n  exact: true,\n  component: Component\n};\n","import React, { useState } from \"react\";\n\nimport { HashRouter } from \"react-router-dom\";\n\nimport { AppContainer } from \"./mastro-elfo-mui/\";\n\nimport { route as about } from \"./pages/about\";\nimport { route as backup } from \"./pages/backup\";\nimport { route as dashboard } from \"./pages/dashboard\";\nimport { route as help } from \"./pages/help\";\nimport { route as settings } from \"./pages/settings\";\nimport { route as todolist } from \"./pages/todolist\";\n\nimport { PaletteContext, str2color } from \"./usePalette\";\nimport \"./mastro-elfo-mui/src/utils/storage.js\";\n\nfunction App() {\n  const [palette, setPalette] = useState({\n    primary: \"teal\",\n    secondary: \"teal\",\n    type: \"light\"\n  });\n  const { primary, secondary, type } = palette;\n  const setPrimary = color => setPalette({ ...palette, primary: color });\n  const setSecondary = color => setPalette({ ...palette, secondary: color });\n  const setType = type => setPalette({ ...palette, type });\n\n  return (\n    <PaletteContext.Provider\n      value={[palette, setPrimary, setSecondary, setType]}\n    >\n      <AppContainer\n        ThemeProps={{\n          palette: {\n            primary: str2color(primary),\n            secondary: str2color(secondary),\n            type: type\n          }\n        }}\n        RouterProps={{\n          Router: HashRouter,\n          routes: [about, backup, dashboard, help, settings, todolist]\n        }}\n      />\n    </PaletteContext.Provider>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}